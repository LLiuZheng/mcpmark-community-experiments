name: Auto-aggregate MCP Server Data

on:
  push:
    paths:
      - 'mcp_servers/**'
  pull_request:
    paths:
      - 'mcp_servers/**'
  workflow_dispatch:  # Allow manual trigger

jobs:
  aggregate-data:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      
      - name: Run MCP data aggregation
        run: |
          echo "üöÄ Running MCP data aggregation..."
          node .github/scripts/aggregate-mcp-data.js
          echo "‚úÖ Aggregation completed"
      
      - name: Check for changes
        id: check-changes
        run: |
          # Check for modified files (existing files that changed)
          modified_files=$(git diff --name-only)
          # Check for untracked files (new files)
          untracked_files=$(git ls-files --others --exclude-standard)
          
          if [ -n "$modified_files" ] || [ -n "$untracked_files" ]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "üìä Changes detected:"
            [ -n "$modified_files" ] && echo "  Modified: $modified_files"
            [ -n "$untracked_files" ] && echo "  New files: $untracked_files"
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "‚ÑπÔ∏è No changes detected"
          fi
      
      - name: Commit and push changes
        if: steps.check-changes.outputs.changes == 'true'
        run: |
          git config --local user.email "arvinx@foxmail.com"
          git config --local user.name "arvinxx"
          git add mcp_servers.json
          git commit -m "ü§ñ Auto-update mcp_servers.json
          
          - Updated aggregated MCP server data
          - Generated by: ${{ github.event_name }} on ${{ github.ref_name }}
          - Commit: ${{ github.sha }}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      
      - name: Create PR comment (for PRs)
        if: github.event_name == 'pull_request' && steps.check-changes.outputs.changes == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // Read the updated mcp_servers.json
            const data = JSON.parse(fs.readFileSync('mcp_servers.json', 'utf8'));
            
            // Generate summary
            let summary = '## ü§ñ MCP Server Data Updated\n\n';
            summary += `Generated at: ${data.generated_at}\n`;
            summary += `Runs (k): ${data.k}\n\n`;
            summary += '### Performance Summary\n\n';
            summary += '| Server | Implementation | Tasks | Pass@1 | Per-Run Cost |\n';
            summary += '|--------|----------------|-------|--------|-------------|\n';
            
            for (const [serverName, implementations] of Object.entries(data.servers)) {
              for (const [implName, metrics] of Object.entries(implementations)) {
                const pass1 = (metrics['pass@1'].avg * 100).toFixed(1);
                const cost = metrics.per_run_cost ? `$${metrics.per_run_cost.toFixed(2)}` : 'N/A';
                summary += `| ${serverName} | ${implName} | ${metrics.total_tasks} | ${pass1}% | ${cost} |\n`;
              }
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });